---
import ThemeToggle from "@/components/Theme.astro";
import SelectorLanguage from "@/components/LanguageSelector.astro";
import MenuIcon from "@/assets/icons/menu.svg";

import { getI18N } from "@/i18n/index";

const { currentLocale } = Astro;
const i18n = getI18N({ currentLocale });

const navItems = [
  {
    title: i18n.NAV.EXPERIENCE,
    label: "inicio",
    url: "/#inicio",
  },
  {
    title: i18n.NAV.PROJECTS,
    label: "proyecto",
    url: "/#proyecto",
  },
  {
    title: i18n.NAV.ABOUT_ME,
    label: "sobre-mi",
    url: "/#sobremi",
  },
  {
    title: i18n.NAV.CONTACT,
    label: "contacto",
    url: "/#contacto",
  },
];
---

<header class="sticky top-4 z-10 w-4xl">
  <nav
    class="flex justify-between items-center text-gray-800 dark:text-gray-200 rounded-lg p-2 bg-background/95 supports-[backdrop-filter]:bg-background/60"
  >
    <a
      aria-label="inicio"
      href="/#inicio"
      class="flex grow basis-0 items-center font-black lg:inline-block mr-2"
    >
      stvn
    </a>
    <div class="flex items-center">
      {
        navItems.map((item) => (
          <a
            class="relative block font-semibold text-sm transition px-2 hover:text-blue-500 dark:hover:text-blue-500"
            aria-label={item.label}
            href={item.url}
          >
            {item.title}
          </a>
        ))
      }
    </div>
    <div
      class="flex grow basis-0 justify-end items-center gap-x-4 text-black dark:text-white"
    >
      <ThemeToggle />
      <SelectorLanguage />
    </div>
  </nav>
</header>

<script>
  document.addEventListener("astro:page-load", () => {
    const sections = document.querySelectorAll("section");
    const navItems = document.querySelectorAll("header nav a");

    const callback = (entries: any[]) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          navItems.forEach((item) => {
            if (item.getAttribute("aria-label") == entry.target.id) {
              item.classList.add("text-blue-500");
            } else {
              item.classList.remove("text-blue-500");
            }
          });
        }
      });
    };

    const observer = new IntersectionObserver(callback, {
      root: null,
      rootMargin: "0px",
      threshold: 0.6,
    });

    sections.forEach((section) => {
      observer.observe(section);
    });

    // Cleanup function
    document.onvisibilitychange = () => {
      if (document.visibilityState === "hidden") {
        observer.disconnect();
      } else {
        sections.forEach((section) => {
          observer.observe(section);
        });
      }
    };
  });
</script>

<style>
  nav {
    animation: nav-shadown 1s linear both;
    animation-timeline: scroll();
    animation-range: 0 100px;
  }

  @keyframes nav-shadown {
    0% {
      background-color: rgba(255, 255, 255, 0);
    }
    to {
      box-shadow:
        0 10px 15px -3px rgba(0, 0, 0, 0.2),
        0 4px 6px -2px rgba(0, 0, 0, 0.1);
      /* ring-width: 1px; */
      backdrop-filter: blur(6px);
      /* ring-color: rgba(255, 255, 255, 0.1); */
    }
  }
</style>
